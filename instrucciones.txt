1º Instalamos PostgreSQL
-------------------------------------------------------
#Instalamos SQL Alchemy
python -m pip install flask-sqlalchemy

#Instalamos Migrate
python -m pip install flask-migrate

#Adaptador de BBDD Python-PostgreSQL
python -m pip install psycopg2

2º Escribimos el siguiente código del archivo app.py
--------------------------------------------------------
from flask import Flask
from flask_migrate import Migrate
from  flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)

# configuración de la bd
USER_DB = 'postgres'
PASS_DB = 'admin'
URL_DB = 'localhost'
NAME_DB = 'pps'

#cadena de conexión
FULL_URL_DB = f'postgresql://{USER_DB}:{PASS_DB}@{URL_DB}/{NAME_DB}'

app.config['SQLALCHEMY_DATABASE_URI'] = FULL_URL_DB
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

#inicialización del objeto db de sqlalchemy
db = SQLAlchemy(app)

# configurar flask-migrate para que podamos realizar el mapeo de la clase de python en PostgreSQL
migrate = Migrate()
migrate.init_app(app, db)


#Creamos la clase modelo
class Persona(db.Model):
    id =db.Column(db.Integer, primary_key=True)
    nombre = db.Column(db.String(250))
    apellidos = db.Column(db.String(250))
    email = db.Column(db.String(250))

    def __str__(self):
        return (
            f'ID: {self.id}'
            f'Nombre: {self.nombre}'
            f'Apellidos: {self.apellidos}'
            f'Email: {self.email}'
        )


3º Proceso de inicialización y mapeo del Modelo y la BBDD
--------------------------------------------------------
#Crea la carpeta de migraciones
flask db init

# Creamos el archivo de migración
flask db migrate

# Subimos a PGadmin
flask db upgrade
